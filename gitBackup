#!/bin/bash

#git backup created by borvelt.

function CreateTFSConnection {
    git remote add "$TFS_CONNECTION" "$TFS_ADDRESS$1"
}

function RemoveTFSConnection {
    git remote remove "${TFS_CONNECTION}"
}

function P2PArray {
    arr1=$1
    arr2=$2
    value=$3
    for arr1Index in "${!arr1[@]}"
    do
        if [[ "${arr1[$arr1Index]}" == "$3" ]];then
            MATCHED_ITEM="${arr2[$arr1Index]}"
            break
        fi
    done
}

REPOS=(tender/api.git tender/web-app.git tender/mpc.git tender/docs.git tender/static.git tender/gluu\-customization.git)
TFS_REPOS=(tender/api.git tender/web-app.git tender/mpc.git tender/docs.git tender/static.git tender/gluu\-customization.git)
DEFAULT_CONNECTION=origin
DEFAULT_BRANCH=master
GIT_REPO_PREFIX="git@10.13.47.54:"
TFS_CONNECTION="tfs"
TFS_ADDRESS="git@10.13.47.54:"
CURRENT_DIRECTORY=$PWD
DIRECTORY="$CURRENT_DIRECTORY/.repo/"

if [ ! -d "$DIRECTORY" ]; then
    mkdir $DIRECTORY
fi

for CURRENT_PROJECT in "${REPOS[@]}"
do
    cd $DIRECTORY
    DIR=$(echo $CURRENT_PROJECT | sed -e "s/^.*tender\/\s*\(\S*\).git$/\1/")
    if [ ! -d "$DIR" ]; then
        git clone "${GIT_REPO_PREFIX}${CURRENT_PROJECT}"
        cd "${DIRECTORY}${DIR}"
    else
        cd "${DIRECTORY}${DIR}"
        git pull "$DEFAULT_CONNECTION" "$DEFAULT_BRANCH"
    fi
    REMOTES=$(git remote -v| cut -d ' ' -f 1);
    REMOTES=$(echo $REMOTES | awk -v RS='[,[:space:]]+' '!a[$0]++{printf "%s%s", $0, RT}')
    IFS=' ' read -r -a SPLIT_REMOTES <<< $REMOTES
    IS_TFS_CONNECTION_FOUNDED=false
    for index in "${!SPLIT_REMOTES[@]}"
    do
        if [[ ${SPLIT_REMOTES[$index]} == "$TFS_CONNECTION" ]];then
            IS_TFS_CONNECTION_FOUNDED=true
            if [[ ${SPLIT_REMOTES[$index+1]} != "$TFS_ADDRESS$CURRENT_PROJECT" && ${SPLIT_REMOTES[$index+1]} != "" ]];then
                RemoveTFSConnection
                CreateTFSConnection "$CURRENT_PROJECT"
            fi
        fi
    done
    if [[ $IS_TFS_CONNECTION_FOUNDED == false ]];then
        P2PArray $REPOS $TFS_REPOS "$CURRENT_PROJECT"
        CreateTFSConnection "$MATCHED_ITEM"
    fi
    printf "Pushing $CURRENT_PROJECT all tags and branches to $TFS_CONNECTION\n"
    git push "$TFS_CONNECTION" --all
    git push "$TFS_CONNECTION" --tags
done